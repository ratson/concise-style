{
  "parserOptions": { "ecmaFeatures": { "jsx": true } },
  "plugins": ["jsx-a11y", "react"],
  "rules": {
    "jsx-a11y/accessible-emoji": "error",
    "jsx-a11y/alt-text": [
      "error",
      {
        "area": [],
        "elements": ["img", "object", "area", "input[type=\"image\"]"],
        "img": [],
        "input[type=\"image\"]": [],
        "object": []
      }
    ],
    "jsx-a11y/anchor-has-content": ["error", { "components": [""] }],
    "jsx-a11y/anchor-is-valid": [
      "off",
      {
        "aspects": ["noHref", "invalidHref", "preferButton"],
        "components": ["Link"],
        "specialLink": []
      }
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-role": ["error", { "ignoreNonDom": false }],
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/heading-has-content": ["error", { "components": [""] }],
    "jsx-a11y/html-has-lang": "error",
    "jsx-a11y/iframe-has-title": "error",
    "jsx-a11y/img-redundant-alt": "error",
    "jsx-a11y/interactive-supports-focus": "error",
    "jsx-a11y/label-has-for": ["error", { "components": ["label"] }],
    "jsx-a11y/lang": "error",
    "jsx-a11y/media-has-caption": [
      "error",
      { "audio": [], "track": [], "video": [] }
    ],
    "jsx-a11y/mouse-events-have-key-events": "off",
    "jsx-a11y/no-access-key": "error",
    "jsx-a11y/no-autofocus": ["error", { "ignoreNonDOM": true }],
    "jsx-a11y/no-distracting-elements": [
      "error",
      { "elements": ["marquee", "blink"] }
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": [
      "error",
      { "tr": ["none", "presentation"] }
    ],
    "jsx-a11y/no-noninteractive-element-interactions": [
      "error",
      {
        "handlers": [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp"
        ]
      }
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": [
      "error",
      {
        "li": ["menuitem", "option", "row", "tab", "treeitem"],
        "ol": [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid"
        ],
        "table": ["grid"],
        "td": ["gridcell"],
        "ul": [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid"
        ]
      }
    ],
    "jsx-a11y/no-noninteractive-tabindex": [
      "error",
      { "roles": ["tabpanel"], "tags": [] }
    ],
    "jsx-a11y/no-onchange": "off",
    "jsx-a11y/no-redundant-roles": "error",
    "jsx-a11y/no-static-element-interactions": [
      "error",
      {
        "handlers": [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp"
        ]
      }
    ],
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "jsx-a11y/scope": "error",
    "jsx-a11y/tabindex-no-positive": "error",
    "react/default-props-match-prop-types": [
      "off",
      { "allowRequiredDefaults": false }
    ],
    "react/display-name": ["off", { "ignoreTranspilerName": false }],
    "react/forbid-component-props": ["off", { "forbid": [] }],
    "react/forbid-elements": ["off", { "forbid": [] }],
    "react/forbid-foreign-prop-types": "off",
    "react/forbid-prop-types": [
      "error",
      { "forbid": ["any", "array", "object"] }
    ],
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-closing-bracket-location": ["error", "line-aligned"],
    "react/jsx-closing-tag-location": "off",
    "react/jsx-equals-spacing": ["error", "never"],
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/jsx-handler-names": [
      "off",
      { "eventHandlerPrefix": "handle", "eventHandlerPropPrefix": "on" }
    ],
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-key": "off",
    "react/jsx-max-props-per-line": [
      "error",
      { "maximum": 1, "when": "multiline" }
    ],
    "react/jsx-no-bind": [
      "error",
      { "allowArrowFunctions": true, "allowBind": false, "ignoreRefs": true }
    ],
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": ["error", { "ignoreCase": true }],
    "react/jsx-no-literals": "off",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-pascal-case": ["error", { "allowAllCaps": true, "ignore": [] }],
    "react/jsx-sort-prop-types": "off",
    "react/jsx-sort-props": [
      "off",
      {
        "callbacksLast": false,
        "ignoreCase": true,
        "noSortAlphabetically": false,
        "reservedFirst": true,
        "shorthandFirst": false,
        "shorthandLast": false
      }
    ],
    "react/jsx-space-before-closing": ["off", "always"],
    "react/jsx-tag-spacing": [
      "error",
      {
        "afterOpening": "never",
        "beforeSelfClosing": "always",
        "closingSlash": "never"
      }
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "warn",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "off",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-multi-comp": ["error", { "ignoreStateless": true }],
    "react/no-redundant-should-component-update": "off",
    "react/no-render-return-value": "error",
    "react/no-set-state": "off",
    "react/no-string-refs": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unused-prop-types": [
      "error",
      { "customValidators": [], "skipShapeProps": true }
    ],
    "react/no-will-update-set-state": "error",
    "react/prefer-es6-class": ["error", "always"],
    "react/prefer-stateless-function": [
      "error",
      { "ignorePureComponents": true }
    ],
    "react/react-in-jsx-scope": "error",
    "react/require-default-props": "error",
    "react/require-optimization": ["off", { "allowDecorators": [] }],
    "react/require-render-return": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": [
      "error",
      {
        "order": [
          "static-methods",
          "lifecycle",
          "/^on.+$/",
          "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
          "everything-else",
          "/^render.+$/",
          "render"
        ]
      }
    ],
    "react/sort-prop-types": [
      "off",
      { "callbacksLast": false, "ignoreCase": true, "requiredFirst": false }
    ],
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error"
  }
}

